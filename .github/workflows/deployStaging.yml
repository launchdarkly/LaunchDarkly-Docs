name: Deploy to Staging
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    name: Deploy to s3 staging
    environment:
      name: staging
      url: http://docs-stg.launchdarkly.com/${{ github.event.pull_request.number }}
    concurrency:
      group: staging-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
        with:
          # fetch entire history to get Last Edit date for topics
          fetch-depth: 0
      - name: Find last successful run
        uses: SamhammerAG/last-successful-build-action@v2
        id: last-success
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          workflow: Deploy to Staging
      - name: Get specific changed files
        # skip if we are checking self
        # last-success default to github.sha
        # for PR that is the merge commit, which is why we don't use it elsewhere
        if: steps.last-success.outputs.sha != github.sha 
        id: changed-files-specific
        uses: tj-actions/changed-files@v18.6
        with:
          token: ${{ github.token }}
          separator: ' '
          base_sha: ${{ steps.last-success.outputs.sha }}
          sha: ${{ github.events.pull_request.head.sha }}
          files: |
            assets
            src
            .github/workflows/deployStaging.yml
            package.json
            yarn.lock
            *.ts
            *.js
          files_ignore: |
            cypress
            .eslintrc.js
            jest.config.js
            jest.setup.js
      - name: Should deploy?
        id: build-status
        run: |
          echo "::debug::any changed: ${{ steps.changed-files-specific.outputs.any_changed }}"
          echo "::debug::only changed: ${{ steps.changed-files-specific.outputs.only_changed }}"
          echo "::debug::any modified: ${{ steps.changed-files-specific.outputs.any_modified }}"
          echo "::set-output name=deploy::${{ toJSON(steps.changed-files-specific.outputs) == '{}' || steps.changed-files-specific.outputs.any_modified == 'true' }}"
      - uses: actions/setup-node@v3
        if: steps.build-status.outputs.deploy == 'true'
        with:
          node-version: '16.x'
      - uses: aws-actions/configure-aws-credentials@v1
        if: steps.build-status.outputs.deploy == 'true'
        with:
          aws-access-key-id: ${{ secrets.STG_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STG_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Caching Gatsby
        if: steps.build-status.outputs.deploy == 'true'
        id: gatsby-cache-build
        uses: actions/cache@v3
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn install
        if: steps.build-status.outputs.deploy == 'true'
        run: CYPRESS_INSTALL_BINARY=0 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install --immutable --immutable-cache
      - name: Build and deploy
        if: steps.build-status.outputs.deploy == 'true'
        run: yarn build-deploy-staging
        env:
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
          GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
          GATSBY_ALGOLIA_INDEX: 'Docs'
          LAUNCHDARKLY_CLIENT_SIDE_ID: ${{ secrets.STG_LAUNCHDARKLY_CLIENT_SIDE_ID }}
          GATSBY_DATADOG_CLIENT_TOKEN: ${{ secrets.STG_DATADOG_CLIENT_TOKEN }}
          GATSBY_DATADOG_RUM_APPLICATION_ID: ${{ secrets.DATADOG_RUM_APPLICATION_ID }}
          GATSBY_DATADOG_RUM_CLIENT_TOKEN: ${{ secrets.DATADOG_RUM_CLIENT_TOKEN }}
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
          GATSBY_TRACKJS_TOKEN: ${{ secrets.TRACKJS_TOKEN }}
          AWS_S3_BUCKET: 'launchdarkly-docs-staging'
          AWS_HOSTNAME: 'docs-stg.launchdarkly.com'
          CI: true

  smoke-test:
    needs: build-deploy
    runs-on: ubuntu-latest
    name: Smoke test staging
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v3
        timeout-minutes: 5
        id: cypress
        continue-on-error: true
        with:
          command-prefix: yarn dlx
          install-command: yarn install --immutable --immutable-cache
          build: yarn build-nav-data
          headless: true
          config: baseUrl=https://docs-stg.launchdarkly.com/${{ github.event.pull_request.number }},retries=2
          spec: cypress/integration/smoke.test.ts
          env: pr_number=${{ github.event.pull_request.number }}
          wait-on: 'https://docs-stg.launchdarkly.com/${{ github.event.pull_request.number }}/home'
          record: true
          tag: staging,smoke
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Cypress outcome
        if: steps.cypress.outcome == 'failure' || steps.cypress.outcome == 'cancelled'
        run: exit 1
